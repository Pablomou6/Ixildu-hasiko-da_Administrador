/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package GUI;
import Aplicacion.*;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author alumnogreibd
 */
public class VAnadirSesion extends javax.swing.JDialog {
    FachadaAplicacion fachadaAp;
    VPrincipal padre;
    Pelicula peliculaAnadir;
    ModeloListasStrings modRestoAnuncios, modAnunciosSesion;
    ArrayList<Anuncio> recienAsignados, anunciosDisponibles;

    /**
     * Creates new form VAnadirSesion
     */
    public VAnadirSesion(java.awt.Frame parent, boolean modal, FachadaAplicacion fa, Pelicula pelicula) {
        super(parent, modal);
        this.fachadaAp = fa;
        padre = (VPrincipal) parent;
        this.peliculaAnadir = pelicula;
        initComponents();
        modRestoAnuncios = new ModeloListasStrings();
        modAnunciosSesion = new ModeloListasStrings();
        recienAsignados = new ArrayList<>();
        anunciosDisponibles = new ArrayList<>(); 
        listaDisponibles.setModel(modRestoAnuncios);
        listaAsignados.setModel(modAnunciosSesion);
        //Añadir lógica para que se recuperen todos los anuncios. Una vez hecho esto, clasificarlos 
        this.cargarSalasEnComboBox();
        this.recuperarAnuncios();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelTituloVentana = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelSesion = new javax.swing.JPanel();
        labelSala = new javax.swing.JLabel();
        labelFecha = new javax.swing.JLabel();
        labelInicio = new javax.swing.JLabel();
        labelPrecio = new javax.swing.JLabel();
        textFieldHoraInicio = new javax.swing.JTextField();
        textFieldFecha = new javax.swing.JTextField();
        cbSala = new javax.swing.JComboBox<>();
        textFieldPrecio = new javax.swing.JTextField();
        panelAnuncios = new javax.swing.JPanel();
        labelDisponibles = new javax.swing.JLabel();
        labelAsignados = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaDisponibles = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaAsignados = new javax.swing.JList<>();
        botonDerecha = new javax.swing.JButton();
        botonIzq = new javax.swing.JButton();
        botonAceptar = new javax.swing.JButton();
        botonCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        labelTituloVentana.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        labelTituloVentana.setText("Añadir sesión");

        labelSala.setText("Sala:");

        labelFecha.setText("Fecha:");

        labelInicio.setText("Hora inicio:");

        labelPrecio.setText("Precio:");

        cbSala.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout panelSesionLayout = new javax.swing.GroupLayout(panelSesion);
        panelSesion.setLayout(panelSesionLayout);
        panelSesionLayout.setHorizontalGroup(
            panelSesionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSesionLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(panelSesionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelSesionLayout.createSequentialGroup()
                        .addComponent(labelFecha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelSesionLayout.createSequentialGroup()
                        .addComponent(labelSala)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbSala, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(panelSesionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelSesionLayout.createSequentialGroup()
                        .addComponent(labelPrecio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldPrecio))
                    .addGroup(panelSesionLayout.createSequentialGroup()
                        .addComponent(labelInicio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldHoraInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24))
        );
        panelSesionLayout.setVerticalGroup(
            panelSesionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSesionLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(panelSesionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSala)
                    .addComponent(labelInicio)
                    .addComponent(textFieldHoraInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(panelSesionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFecha)
                    .addComponent(labelPrecio)
                    .addComponent(textFieldFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(100, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Datos sesión", panelSesion);

        labelDisponibles.setText("Disponibles:");

        labelAsignados.setText("Asignados");

        listaDisponibles.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listaDisponibles);

        listaAsignados.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(listaAsignados);

        botonDerecha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/flechaD.jpg"))); // NOI18N
        botonDerecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDerechaActionPerformed(evt);
            }
        });

        botonIzq.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/flechaI.jpg"))); // NOI18N
        botonIzq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonIzqActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAnunciosLayout = new javax.swing.GroupLayout(panelAnuncios);
        panelAnuncios.setLayout(panelAnunciosLayout);
        panelAnunciosLayout.setHorizontalGroup(
            panelAnunciosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAnunciosLayout.createSequentialGroup()
                .addGroup(panelAnunciosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAnunciosLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(labelDisponibles))
                    .addGroup(panelAnunciosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(panelAnunciosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAnunciosLayout.createSequentialGroup()
                        .addComponent(labelAsignados)
                        .addGap(41, 41, 41))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAnunciosLayout.createSequentialGroup()
                        .addGroup(panelAnunciosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(botonIzq)
                            .addComponent(botonDerecha))
                        .addGap(46, 46, 46)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        panelAnunciosLayout.setVerticalGroup(
            panelAnunciosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAnunciosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAnunciosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDisponibles)
                    .addComponent(labelAsignados))
                .addGap(18, 18, 18)
                .addGroup(panelAnunciosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelAnunciosLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(botonDerecha)
                        .addGap(18, 18, 18)
                        .addComponent(botonIzq)))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Anuncios sesión", panelAnuncios);

        botonAceptar.setText("Aceptar");
        botonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarActionPerformed(evt);
            }
        });

        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelTituloVentana)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(botonCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonAceptar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTituloVentana)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAceptar)
                    .addComponent(botonCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_botonCancelarActionPerformed

    private void actualizarListas() {
        List<String> tematicasDisponibles = anunciosDisponibles.stream()
                .map(Anuncio::getTematica)
                .collect(Collectors.toList());

        List<String> tematicasAsignadas = recienAsignados.stream()
                .map(Anuncio::getTematica)
                .collect(Collectors.toList());

        modRestoAnuncios.setElementos(tematicasDisponibles);
        modAnunciosSesion.setElementos(tematicasAsignadas);
    }
    
    private void botonDerechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDerechaActionPerformed
        List<String> seleccionados = listaDisponibles.getSelectedValuesList();

        if (seleccionados != null && !seleccionados.isEmpty()) {
            for (String tematica : seleccionados) {
                //Buscar el anuncio correspondiente
                Anuncio anuncio = anunciosDisponibles.stream()
                        .filter(a -> a.getTematica().equals(tematica))
                        .findFirst()
                        .orElse(null);

                if (anuncio != null) {
                    recienAsignados.add(anuncio);
                    anunciosDisponibles.remove(anuncio);
                }
            }

            //Actualizar modelos
            actualizarListas();
        }
    }//GEN-LAST:event_botonDerechaActionPerformed

    private void botonIzqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonIzqActionPerformed
        List<String> seleccionados = listaAsignados.getSelectedValuesList();

        if (seleccionados != null && !seleccionados.isEmpty()) {
            for (String tematica : seleccionados) {
                //Buscar el anuncio correspondiente
                Anuncio anuncio = recienAsignados.stream()
                        .filter(a -> a.getTematica().equals(tematica))
                        .findFirst()
                        .orElse(null);

                if (anuncio != null) {
                    anunciosDisponibles.add(anuncio);
                    recienAsignados.remove(anuncio);
                }
            }

            //Actualizar modelos
            actualizarListas();
        }
    }//GEN-LAST:event_botonIzqActionPerformed

    private void botonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarActionPerformed
        //recuperamos la información necesaria
        Integer idSala = Integer.parseInt((String) cbSala.getSelectedItem());
        String horaInicio = textFieldHoraInicio.getText();
        String fecha = textFieldFecha.getText();
        Float precio = Float.parseFloat(textFieldPrecio.getText());
        ArrayList<Anuncio> anunciosAsignados = recienAsignados;
        
        if(!fachadaAp.anadirSesion(idSala, horaInicio, fecha, precio, anunciosAsignados, peliculaAnadir)) {
            return;
        }
        
        this.dispose();
    }//GEN-LAST:event_botonAceptarActionPerformed
    
    private void cargarSalasEnComboBox() {
        ArrayList<Integer> idsSalas = fachadaAp.recuperarIdsSalas();
        
        DefaultComboBoxModel<String> salasExistentes = new DefaultComboBoxModel<>();
        for(Integer num : idsSalas) {
            salasExistentes.addElement(num.toString());
        }
        cbSala.setModel(salasExistentes);
    }
    
    private void recuperarAnuncios() {
        //Vamos a recuperar todos los anuncios disponibles en la base de datos
        ArrayList<Anuncio> todosAnuncios = fachadaAp.obtenerAnuncios();
        //Ponemos los anuncios disponibles (todos)
        anunciosDisponibles = new ArrayList<>(todosAnuncios);
        
        //Exrtaemos la temática para mostrar en las listas
        List<String> tematicasDisponibles = anunciosDisponibles.stream()
                .map(Anuncio::getTematica)
                .collect(Collectors.toList());
        ArrayList<String> tematicasAsignadas = new ArrayList<>();
        
        //Asignamos el modelo a cada lista (en la lista asignados no habrá nada, ya que estamos creando la sesión)
        modRestoAnuncios.setElementos(tematicasDisponibles);
        modAnunciosSesion.setElementos(tematicasAsignadas);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAceptar;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JButton botonDerecha;
    private javax.swing.JButton botonIzq;
    private javax.swing.JComboBox<String> cbSala;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labelAsignados;
    private javax.swing.JLabel labelDisponibles;
    private javax.swing.JLabel labelFecha;
    private javax.swing.JLabel labelInicio;
    private javax.swing.JLabel labelPrecio;
    private javax.swing.JLabel labelSala;
    private javax.swing.JLabel labelTituloVentana;
    private javax.swing.JList<String> listaAsignados;
    private javax.swing.JList<String> listaDisponibles;
    private javax.swing.JPanel panelAnuncios;
    private javax.swing.JPanel panelSesion;
    private javax.swing.JTextField textFieldFecha;
    private javax.swing.JTextField textFieldHoraInicio;
    private javax.swing.JTextField textFieldPrecio;
    // End of variables declaration//GEN-END:variables
}
